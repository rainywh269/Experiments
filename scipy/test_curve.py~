#encoding=utf-8
data = [ 18948 , 23597 , 25900 , 27263 , 28200 , 28920 , 29467 , 29889 , 30224 , 30506 , 30763 , 30980 , 31191 , 31372 , 31508 , 31640 , 31780 , 31906 , 31990 , 32097 , 32192 , 32272 , 32351 , 32418 , 32476 , 32529 , 32581 , 32645 , 32699 , 32746 , 32791 , 32840 , 32877 , 32913 , 32945 , 32986 , 33022 , 33050 , 33075 , 33113 , 33140 , 33174 , 33197 , 33217 , 33243 , 33268 , 33293 , 33305 , 33330 , 33348 , 33372 , 33388 , 33404 , 33419 , 33439 , 33457 , 33474 , 33490 , 33504 , 33520 , 33542 , 33549 , 33564 , 33575 , 33586 , 33600 , 33606 , 33626 , 33631 , 33641 , 33650 , 33661 , 33672 , 33676 , 33686 , 33690 , 33699 , 33707 , 33715 , 33721 , 33730 , 33738 , 33743 , 33753 , 33765 , 33777 , 33785 , 33791 , 33798 , 33806 , 33814 , 33825 , 33838 , 33842 , 33845 , 33855 , 33861 , 33864 , 33872 , 33878 , 33886 , 33897 , 33904 , 33911 , 33916 , 33924 , 33925 , 33929 , 33932 , 33941 , 33947 , 33952 , 33953 , 33963 , 33968 , 33973 , 33976 , 33979 , 33985 , 33990 , 33993 , 33994 , 33996 , 33999 , 34003 , 34005 , 34008 , 34011 , 34017 , 34021 , 34027 , 34031 , 34032 , 34034 , 34040 , 34044 , 34045 , 34048 , 34053 , 34057 , 34065 , 34067 , 34068 , 34071 , 34076 , 34077 , 34078 , 34078 , 34080 , 34083 , 34085 , 34086 , 34088 , 34092 , 34092 , 34094 , 34098 , 34099 , 34101 , 34102 , 34109 , 34110 , 34115 , 34119 , 34121 , 34123 , 34126 , 34129 , 34130 , 34133 , 34137 , 34137 , 34139 , 34142 , 34142 , 34144 , 34147 , 34149 , 34150 , 34153 , 34153 , 34154 , 34155 , 34157 , 34158 , 34160 , 34164 , 34165 , 34167 , 34168 , 34169 , 34170 , 34171 , 34171 , 34172 , 34175 , 34178 , 34180 , 34181 , 34183 , 34185 , 34187 , 34189 , 34189 , 34193 , 34198 , 34199 , 34200 , 34201 , 34202 , 34204 , 34204 , 34207 , 34207 , 34209 , 34211 , 34211 , 34212 , 34213 , 34214 , 34217 , 34218 , 34220 , 34221 , 34222 , 34223 , 34224 , 34225 , 34225 , 34225 , 34225 , 34226 , 34226 , 34227 , 34227 , 34227 , 34229 , 34229 , 34231 , 34232 , 34232 , 34234 , 34235 , 34235 , 34235 , 34235 , 34235 , 34235 , 34236 , 34236 , 34238 , 34238 , 34238 , 34238 , 34239 , 34239 , 34239 , 34240 , 34241 , 34241 , 34241 , 34242 , 34245 , 34246 , 34246 , 34246 , 34246 , 34246 , 34246 , 34246 , 34247 , 34248 , 34248 , 34250 , 34252 , 34252 , 34252 , 34253 , 34253 , 34254 , 34254 , 34254 , 34255 , 34255 , 34256 , 34256 , 34256 , 34258 , 34258 , 34260 , 34260 , 34260 , 34261 , 34262 , 34262 , 34262 , 34263 , 34263 , 34264 , 34264 , 34264 , ]
show_data = [
        ]

from scipy.optimize import fmin_bfgs
from numpy.polynomial.polynomial import polyfit
from scipy.optimize import fmin
import numpy as np
import scipy
import numpy
import pylab
import scipy.optimize as optimize

c, stats = polyfit(range(1, len(data)+1), data, 120, full=True)
l = c.tolist()

fff = scipy.poly1d(l[::-1])

f1 = scipy.poly1d(scipy.polyder(l[::-1]))
f2 = scipy.poly1d(scipy.polyder(f1))
f3 = scipy.poly1d(scipy.polyder(f2))
#f = scipy.poly1d(scipy.polyder(f))
#print f
#x0 = 3
#xopt = optimize.fmin(f, x0, xtol=1e-8, disp=True)
#print(xopt)

t = numpy.arange(0.0, 30, 0.01)
#s = map(fff,t)
s1 = map(f1,t)
s2 = map(f2,t)
s3 = map(f3,t)
#pylab.plot(t, s,'#000000')
#pylab.plot(t, s1, 'g')
pylab.plot(t, s2,'b')
pylab.plot(t, s3,'r')

pylab.xlabel('clicks (s)')
pylab.ylabel('showed (mV)')
pylab.title(u'delta2 and delta3')
pylab.grid(True)
pylab.savefig('simple_plot')

pylab.show()













#f = scipy.poly1d(scipy.polyder(f))
#
#
##x0 = np.array([2, 3, 4, 5, 6, 7, 8, 9, 10])
###fmin_bfgs(lambda x:x**2,x0)
##fmin(f, (1,2,3))
##fmin
#
##def f(x):
##    c, stats = polyfit(range(1, len(data)+1), data, 120, full=True)
##    return sum([c[i]*x**i for i in range(len(c))])
##
#
#
##import scipy.optimize as optimize
##def rosen(x):
##    """The Rosenbrock function"""
##        return sum(100.0*(x[1:]-x[:-1]**2.0)**2.0 + (1-x[:-1])**2.0)
##        x0 = [1.3, 0.7, 0.8, 1.9, 1.2]
##        xopt = optimize.fmin(rosen, x0, xtol=1e-8, disp=True)
##        # Optimization terminated successfully.
##        #          Current function value: 0.000000
##        #          Iterations: 339
##        #          Function evaluations: 571
##        print(xopt)
##        # [ 1.  1.  1.  1.  1.]
##
